//Exercício 1

using Exercicios;
using System;

namespace Exercicios
{
    public class Exercicios01
    {
        public static void Executar()
        {
            int num;
            Console.Write("Digite a quantidade de vetores:");
            num = int.Parse(Console.ReadLine());
            int[] vetor = new int[num];
            Biblioteca_de_Array.Leia_Vetor(vetor);
            Console.Write("Os valores ditados foram:");
            Biblioteca_de_Array.Mostre_Vetor(vetor);
            int soma = Biblioteca_de_Array.Soma_de_Vetor(vetor);
            Console.WriteLine($"\nA soma dos vetores será de {soma}");
            Console.ReadKey();
        }
    }
}

//Exercício 2

using Exercicios;
using System;


namespace Exercicios
{
    public class Exercicios02
    {
        public static void Executar()
        {
            int num;
            Console.Write("Escreva a quantidade de vetores:");
            num = int.Parse(Console.ReadLine());
            int[] vetor = new int[num];
            Biblioteca_de_Array.Leia_Vetor(vetor);
            Console.Write("Os valores ditados foram:");
            Biblioteca_de_Array.Mostre_Vetor(vetor);
            int maior = Biblioteca_de_Array.Maior(vetor);
            Console.WriteLine($"\nO maior numero digitado foi {maior}");
            Console.ReadKey();
        }
    }
}

//Exercício 3

using Exercicios;
using System;

namespace Exercicios
{
    internal class Exercicios03
    {
        public static void Executar()
        {
            int num;
            Console.Write("Digite a quantidade de vetores a serem ultilizados:");
            num = int.Parse(Console.ReadLine());
            int[] vetor = new int[num];
            Biblioteca_de_Array.Leia_Vetor(vetor);
            Console.Write("Os valores ditados foram:");
            Biblioteca_de_Array.Mostre_Vetor(vetor);
            int menor = Biblioteca_de_Array.Menor(vetor);
            Console.WriteLine($"\nO menor numero digitado foi {menor}");
            Console.ReadKey();
        }
    }
}

//Exercício 4

using Exercicios;
using System;

namespace Exercicios
{
    internal class Exercicios04
    {
        public static void Executar()
        {
            int num;
            Console.Write("Digite a quantidade de vetores que serão gerados aleatoriamente:");
            num = int.Parse(Console.ReadLine());
            int[] vetor = new int[num];
            Biblioteca_de_Array.Gera_Vetor(vetor);
            foreach (int numero in vetor)
            {
                Console.Write(numero + " ");
            }
            int impar = Biblioteca_de_Array.Impar(vetor);
            Console.WriteLine($"\nA quantidade de numeros imapares é de {impar}");
            Console.ReadKey();

        }
    }
}
//Exercício 5

using Exercicios;
using System;

namespace Exercicios
{
    internal class Exercicios05
    {
        public static void Executar()
        {
            string dna;
            Console.WriteLine("Entre com as bases:");
            dna = Console.ReadLine();
            int n = dna.Length;
            char[] complementar = new char[n];

            for (int i = 0; i < n; i++)
            {
                switch (dna[i])
                {
                    case 'T':
                        complementar[i] = 'A';
                        break;
                    case 'A':
                        complementar[i] = 'T';
                        break;
                    case 'C':
                        complementar[i] = 'G';
                        break;
                    case 'G':
                        complementar[i] += 'C';
                        break;
                }
            }
            Console.WriteLine("===DNA===");
            Console.WriteLine($" {dna}");
            Console.WriteLine("Base complementar:");
            for (int i = 0; i < complementar.Length; i++)
            {
                Console.Write($" {complementar[i]}");
            }
        }
    }
}

//Exercício 6

using Exercicios;
using System;

namespace Exercicios
{
    internal class Exercicios06
    {
        public static void Executar()
        {
            int num, cont = 0;
            Random random = new Random();
            num = random.Next(1, 100);
            int[] rat = new int[num];
            Biblioteca_de_Array.Gera_Vetor(rat);

            Console.WriteLine("Digite um numero:");
            int x = int.Parse(Console.ReadLine());
            bool encontrado = false;
            foreach (int i in rat)
            {
                if (x == i)
                {
                    Console.WriteLine($"Parabéns! Você acertou o número. A posição do número é {cont}.");
                    encontrado = true;
                    break;
                }
                cont++;
            }
            if (!encontrado)
            {
                Console.WriteLine($"O número {x} não está no vetor.");
            }
            Console.ReadKey();
        }
    }
}


//Exercício 7

using System;
using Exercicios;

namespace Exercicios
{
    internal class Exercicios07
    {
        public static void Executar()
        {
            Console.Write("Digite o tamanho dos vetores: ");
            int n = int.Parse(Console.ReadLine());

            // Cria três vetores: dois de entrada e um para o resultado
            int[] vetor1 = new int[n];
            int[] vetor2 = new int[n];
            int[] vetorResultado = new int[n];

            Biblioteca_de_Array.Gera_Vetor(vetor1);
            Biblioteca_de_Array.Gera_Vetor(vetor2);

            Console.WriteLine("Vetor 1:");
            foreach (int num in vetor1)
            {
                Console.Write(num + " ");
            }
            Console.WriteLine();

            Console.WriteLine("Vetor 2:");
            foreach (int num in vetor2)
            {
                Console.Write(num + " ");
            }
            Console.WriteLine();

            for (int i = 0; i < n; i++)
            {
                vetorResultado[i] = vetor1[i] * vetor2[i];
            }

            Console.WriteLine("Vetor Resultante (multiplicação):");
            foreach (int num in vetorResultado)
            {
                Console.Write(num + " ");
            }
            Console.WriteLine();
        }
    }
}

//Exercício 8

using System;

namespace Exercicios
{
    internal class Exercicios08
    {
        public static void Executar()
        {
            Console.WriteLine("Digite uma sequência de caracteres sem espaços:");
            char[] vetor = Console.ReadLine().ToCharArray();
            
            int tamanho = vetor.Length;

            Console.WriteLine("Vetor em ordem inversa:");
            for (int i = tamanho - 1; i >= 0; i--)
            {
                Console.Write(vetor[i]);
            }
        }
    }
}


//Exercício 9

using System;
using Exercicios;

namespace Exercicios
{
    internal class Exercicios09
    {
        public static void Executar()
        {
            int num, cont = 0;
            Console.WriteLine("informe quantos numeros voce deseja colocar:");
            num = int.Parse(Console.ReadLine());
            int[] numeros = new int[num];
            Biblioteca_de_Array.Leia_Vetor(numeros);
            Console.WriteLine("Os numeros digitados foram:");
            
            Console.WriteLine("\nDigite o valor a ser verificado:");
            int valor = int.Parse(Console.ReadLine());
            
            foreach (int elemento in numeros)
            {
                Console.Write(elemento + " ");
                
                if (elemento == valor)
                {
                    cont++;
                }
            }
            Console.WriteLine($"\nO valor {valor} aparece {cont} vezes no vetor.");
        }
    }
}


//Exercício 10

using System;
using System.Numerics;
using Exercicios;

namespace Exercicios
{
    internal class Exercicios10
    {
        public static void Executar()
        {
            Console.WriteLine("Quantas vezes tu queres que o dado seja lançado?");
            int num = int.Parse(Console.ReadLine());
            
            // Numeros aletorios do dado
            Random random = new Random();
            int[] vector = new int[num];
            for (int i = 0; i < vector.Length; i++)
            {
                vector[i] = random.Next(1, 7);
            }
            // for das faces que mais aparecem
            int cont = 0;
            for (int i = 1; i != 7; i++)
            {
                
                foreach (int j in vector)
                {
                    if(j == i)
                    {
                        cont++;
                    }
                }
                Console.WriteLine($"A face do numero {i} apareceu {cont}");
                cont = 0;
            }
        }
    }
}

//Exercício 11

using System;

namespace Exercicios
{
    internal class Exercicios11
    {
        public static void Executar()
        {
            Console.WriteLine("Digite a mensagem codificada:");
            string mensagemCodificada = Console.ReadLine();

            // Inicializa uma string vazia para armazenar a mensagem decodificada
            string mensagemDecodificada = "";

            // Percorre a mensagem codificada, ignorando os caracteres 'p' que precedem as letras
            for (int i = 0; i < mensagemCodificada.Length; i++)
            {
                if (mensagemCodificada[i] == 'p') // Se o caractere for 'p', pula para a próxima letra
                {
                    i++; // Ignora o 'p' e pega a próxima letra
                    mensagemDecodificada += mensagemCodificada[i]; // Adiciona a letra após o 'p'
                }
                else
                {
                    mensagemDecodificada += mensagemCodificada[i]; // Adiciona caracteres que não são 'p'
                }
            }

            // Exibe a mensagem decodificada
            Console.WriteLine("Mensagem decodificada:");
            Console.WriteLine(mensagemDecodificada);
        }
    }
}


//Exercício 12

using System;
using Exercicios;

namespace Exercicios
{
    internal class Exercicios12
    {
        public static void Executar()
        {
            double[] notas = new double[5];
            double soma = 0;
            Console.WriteLine("Digite as cinco notas da escola de samba:");

            // Declarar as notas
            for (int i = 0; i < notas.Length; i++)
            {
                Console.Write($"{i + 1}° Nota:");
                notas[i] = double.Parse(Console.ReadLine());
                soma += notas[i];
            }
            // Maior nota
            double maior = 0;
            for (int i = 0; i < notas.Length; i++)
            {
                if (notas[i] > maior)
                {
                    maior = notas[i];
                }
            }
            // Menor nota
            double menor = notas[0];
            for (int i = 1; i < notas.Length; i++)
            {
                if (notas[i] < menor)
                {
                    menor = notas[i];
                }
            }

            double resutado = soma - (maior + menor);
            Console.WriteLine($"A soma das três notas centrais é {resutado:F1} ");
        }
    }
}
