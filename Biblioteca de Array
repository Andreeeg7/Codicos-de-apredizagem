using System;

namespace Exercicios
{
    public class Biblioteca_de_Array
    {

        public static void Leia_Vetor(int[] vector)
        {
            for (int i = 0; i < vector.Length; i++)
            {
                Console.Write($"[{i}]:");
                vector[i] = int.Parse(Console.ReadLine());
            }
        }//Leia Vetor int
        public static void Mostre_Vetor(int[] vector)
        {
            for (int i = 0; i < vector.Length; i++)
            {
                Console.Write($"|{vector[i]} ");
            }
        }//Mostre Vetor int
        public static void Gera_Vetor(int[] vector)
        {
            Random random = new Random();
            for (int i = 0; i < vector.Length; i++)
            {
                vector[i] = random.Next(1, 100);
            }
        } // Gera Vetor int
        public static void Leia_Vetor(double[] vector)
        {
            for (int i = 0; i < vector.Length; i++)
            {
                Console.Write($"[{i:F2}]:");
                vector[i] = int.Parse(Console.ReadLine());
            }
        }//Leia Vetor Double
        public static void Mostre_Vetor(double[] vector)
        {
            for (int i = 0; i < vector.Length; i++)
            {
                Console.Write($"|{vector[i]:F2} ");
            }
        }//Mostre Vetor Double
        public static void Gera_Vetor(double[] vector)
        {
            Random random = new Random();
            for (int i = 0; i < vector.Length; i++)
            {
                vector[i] = random.Next(1, 100);
            }
        } // Gera Vetor Double
        public static int Soma_de_Vetor(int[] vector)
        {
            int soma = 0;
            for (int i = 0; i < vector.Length; i++)
            {
                soma += vector[i];
            }
            return soma;
        } // Soma de Vetor
        public static int Maior(int[] vector)
        {
            int maior = 0;
            for (int i = 0; i < vector.Length; i++)
            {
                if (vector[i] > maior)
                {
                    maior = vector[i];
                }
            }
            return maior;
        } // Maior Vetor 
        public static int Menor(int[] vector)
        {
            int menor = vector[0];
            for (int i = 1; i < vector.Length; i++)
            {
                if (vector[i] < menor)
                {
                    menor = vector[i];
                }
            }
            return menor;
        } // Menor Vetor
        public static double Impar(double[] vector)
        {
            double impar = 0;
            for (int i = 0; i < vector.Length; i++)
            {
                if (vector[i] % 2 != 0)
                {
                    impar++;
                }
            }
            return impar;
        } // Impar Vetor double
        public static int Impar(int[] vector)
        {
            int impar = 0;
            foreach (int numero in vector)
            {
                if (numero % 2 != 0)
                {
                    impar++;
                }
            }
            return impar;
        } // Impar Vetor aleatorio

    }
}
